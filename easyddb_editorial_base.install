<?php
/**
 * @file
 * Install/uninstall routine.
 */

/**
 * Implements hook_install().
 */
function easyddb_editorial_base_install() {
  _easyddb_editorial_base_create_base();
  _easyddb_editorial_base_create_fields();
  easyddb_editorial_base_section_shortcut();

  variable_set('editorial_base_content_types', array());
}

/**
 * Implements hook_uninstall().
 */
function easyddb_editorial_base_uninstall() {
  _easyddb_editorial_base_purge_fields();
  _easyddb_editorial_base_purge_base();

  variable_del('editorial_base_content_types');
}

/**
 * Create editorial base (Section) vocabulary.
 */
function _easyddb_editorial_base_create_base() {
  $voc = new stdClass();
  $voc->name = st('Section');
  $voc->machine_name = 'editorial_base';

  taxonomy_vocabulary_save($voc);

  $vocab_field_base = array(
    'field_eb_section_summary_text' => array(
      'active' => 1,
      'cardinality' => 1,
      'deleted' => 0,
      'entity_types' => array(),
      'field_name' => 'field_eb_section_summary_text',
      'foreign keys' => array(
        'format' => array(
          'columns' => array(
            'format' => 'format',
          ),
          'table' => 'filter_format',
        ),
      ),
      'indexes' => array(
        'format' => array(
          0 => 'format',
        ),
      ),
      'locked' => 0,
      'module' => 'text',
      'settings' => array(
        'profile2_private' => FALSE,
      ),
      'translatable' => 0,
      'type' => 'text_long',
    ),
    'field_eb_section_content_image' => array(
      'active' => 1,
      'cardinality' => 1,
      'deleted' => 0,
      'entity_types' => array(),
      'field_name' => 'field_eb_section_content_image',
      'foreign keys' => array(
        'fid' => array(
          'columns' => array(
            'fid' => 'fid',
          ),
          'table' => 'file_managed',
        ),
      ),
      'indexes' => array(
        'fid' => array(
          0 => 'fid',
        ),
      ),
      'locked' => 0,
      'module' => 'image',
      'settings' => array(
        'default_image' => 0,
        'profile2_private' => FALSE,
        'uri_scheme' => 'public',
      ),
      'translatable' => 0,
      'type' => 'image',
    ),
  );

  $vocab_field_instance = array(
    'taxonomy_term-editorial_base-field_eb_section_summary_text' => array(
      'bundle' => 'editorial_base',
      'default_value' => NULL,
      'deleted' => 0,
      'description' => '',
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'text',
          'settings' => array(),
          'type' => 'text_default',
          'weight' => 4,
        ),
      ),
      'entity_type' => 'taxonomy_term',
      'field_name' => 'field_eb_section_summary_text',
      'label' => 'Summary',
      'required' => 0,
      'settings' => array(
        'text_processing' => 1,
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 1,
        'module' => 'text',
        'settings' => array(
          'rows' => 5,
        ),
        'type' => 'text_textarea',
        'weight' => 3,
      ),
    ),
    'taxonomy_term-editorial_base-field_eb_section_content_image' => array(
      'bundle' => 'editorial_base',
      'deleted' => 0,
      'description' => '',
      'display' => array(
        'default' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 3,
        ),
      ),
      'entity_type' => 'taxonomy_term',
      'field_name' => 'field_eb_section_content_image',
      'label' => 'Content image.',
      'required' => 0,
      'settings' => array(
        'alt_field' => 0,
        'default_image' => 0,
        'file_directory' => '',
        'file_extensions' => 'png gif jpg jpeg',
        'max_filesize' => '',
        'max_resolution' => '',
        'min_resolution' => '',
        'title_field' => 0,
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 1,
        'module' => 'media',
        'settings' => array(
          'allowed_schemes' => array(
            'public' => 'public',
            'vimeo' => 0,
            'youtube' => 0,
          ),
          'allowed_types' => array(
            'audio' => 0,
            'document' => 0,
            'image' => 'image',
            'video' => 0,
          ),
          'browser_plugins' => array(
            'ding_content' => 0,
            'media_default--media_browser_1' => 'media_default--media_browser_1',
            'media_default--media_browser_my_files' => 0,
            'media_internet' => 0,
            'upload' => 'upload',
            'youtube' => 0,
          ),
        ),
        'type' => 'media_generic',
        'weight' => 3,
      ),
    ),
  );

  foreach ($vocab_field_base as $field_base) {
    field_create_field($field_base);
  }

  foreach ($vocab_field_instance as $field_instance) {
    field_create_instance($field_instance);
  }
}

/**
 * Create the field to be used in node bundles,
 * to link content to editorial base vocabulary.
 */
function _easyddb_editorial_base_create_fields() {
  $field_definition = array(
    'field_name' => 'field_editorial_base',
    'type' => 'taxonomy_term_reference',
    'module' => 'taxonomy',
    'active' => '1',
    'locked' => '0',
    'cardinality' => '1',
    'deleted' => '0',
    'settings' => array(
      'allowed_values' => array(
        array(
          'vocabulary' => 'editorial_base',
          'parent' => '0',
        ),
      ),
    ),
  );

  field_create_field($field_definition);
}

/**
 * Remove all fields regarding editorial base.
 */
function _easyddb_editorial_base_purge_fields() {
  $node_types = node_type_get_types();

  foreach ($node_types as $type) {
    $instance = field_read_instance('node', 'field_editorial_base', $type->type);
    field_delete_instance($instance);
  }

  field_delete_field('field_editorial_base');
}

/**
 * Remove editorial base vocabulary.
 */
function _easyddb_editorial_base_purge_base() {
  $voc = taxonomy_vocabulary_machine_name_load('editorial_base');
  if (isset($voc->vid)) {
    taxonomy_vocabulary_delete($voc->vid);
  }
}

/**
 * Add a default shortcut to section term creation page.
 */
function easyddb_editorial_base_update_7000() {
  easyddb_editorial_base_section_shortcut();
}

/**
 * Create a link in shortcut menu bar.
 */
function easyddb_editorial_base_section_shortcut() {
  if (easyddb_editorial_base_section_shortcut_exists()) {
    return;
  }

  $t = get_t();

  $shortcut_set = shortcut_set_load(SHORTCUT_DEFAULT_SET_NAME);
  $shortcut_set->links[] = array(
    'link_path' => 'admin/structure/taxonomy/editorial_base/add',
    'link_title' => $t('Add section term'),
  );

  shortcut_set_save($shortcut_set);
}

/**
 * Check if section shortcut link already exists.
 *
 * @return boolean
 *   TRUE if the link exists, FALSE otherwise.
 */
function easyddb_editorial_base_section_shortcut_exists() {
  $shortcut_set = shortcut_set_load(SHORTCUT_DEFAULT_SET_NAME);

  foreach ($shortcut_set->links as $link) {
    if ($link['link_path'] == 'admin/structure/taxonomy/editorial_base/add') {
      return TRUE;
    }
  }

  return FALSE;
}
